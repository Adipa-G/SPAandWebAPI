name: BackendNetCore
run-name: Build and Test Backend NetCore
on: [push, workflow_dispatch]
jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      changed: ${{ steps.filter.outputs.path }}
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
    - name: Detect if any files changed related to this build task
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          path:
            - 'backend/netcore/**'
    - run: echo "üçè This job's status is ${{ job.status }}."

  build-and-test-solution:
    needs: changes
    if: ${{ needs.changes.outputs.changed == 'true' || github.event_name == 'workflow_dispatch'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      - name: Install dependencies
        run: dotnet restore ./backend/netcore/Mvc.sln 
      - name: Build 
        run: dotnet build ./backend/netcore/Mvc.sln 
      - name: Run application
        run: nohup dotnet run --project ./backend/netcore/src/Web/Web.csproj --launch-profile E2E &
      - name: Wait for the application to start
        run: |
          for i in {1..30}; do
            if curl --fail http://localhost:5000/alive; then
              echo " - Web app is up!"
              exit 0
            fi
            sleep 2
          done
          echo "Web app did not start in time."
          exit 1
      - name: Test 
        run: dotnet test ./backend/netcore/Mvc.sln --logger trx
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: test-results-build-netcore
          path: "**/*.trx"                            
          reporter: dotnet-trx
          fail-on-error: true
      - run: echo "üçè This job's status is ${{ job.status }}."
